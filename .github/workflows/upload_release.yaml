on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10


name: Upload Release Asset

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    needs: [release]
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        debian-release: [buster, bullseye, sid]
        revision: [3, 4]
        board: [pi]
        include:
          - board: jetson-nano
            revision: 300
            experimental: true
          - debian-release: buster
            experimental: false
          - debian-release: bullseye
            experimental: true
          - debian-release: sid
            experimental: true
    steps:
      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        env:
          RELEASE: ${{ matrix.debian-release }}
          REVISON: ${{ matrix.revision }}
          BOARD: ${{ matrix.board }}
          GRAPHICAL: false
        run: |
          sudo apt update
          sudo apt install qemu gparted debootstrap qemu-user-static schroot
          bash -x ./stage1.sh
          zip debian-${{ matrix.board }}-${{ matrix.revision }}-${{ matrix.debian-release }}.zip debian-${{ matrix.board }}.img
      - name: Start SSH via Ngrok
        if: ${{ failure() }}
        run: curl -sL https://gist.githubusercontent.com/ClashTheBunny/ac7ca189e1f8ab9eb5686662412a4cce/raw/7099b9db76729dc5761da72aa8525f632d8875c9/debug-github-actions.sh | bash
        env:
          # After sign up on the https://ngrok.com/
          # You can find this token here: https://dashboard.ngrok.com/get-started/setup
          NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}

          # This password you will use when authorizing via SSH 
          USER_PASS: ${{ secrets.USER_PASS }}
      - name: Don't kill instace
        if: ${{ failure() }}
        run: sleep 1h # Prevent to killing instance after failure
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./debian-${{ matrix.board }}-${{ matrix.revision }}-${{ matrix.debian-release }}.zip
          asset_name: debian-${{ matrix.board }}-${{ matrix.revision }}-${{ matrix.debian-release }}.zip
          asset_content_type: application/zip
